AWSTemplateFormatVersion: 2010-09-09
Description: 
  Deploy Amazon Q Business Application with support data.
Parameters:
  S3DataSourceBucket:
    Description: The name of the S3 bucket that contains the data for the data source
    Type: String
  IAMIdentityCenterARN:
    Description: IAM Identity Center is prerequisite to configure Q Business application. Provide the IAM Identity Center instance ARN
    Type: String
  QBusinessApplicationName:
    Description: The name of your Q Business Application
    Type: String
 
Resources:
  QBusinessApp:
    Type: AWS::QBusiness::Application
    Properties:
      DisplayName: !Ref QBusinessApplicationName
      Description: Q Support Insights
      IdentityCenterInstanceArn: !Ref IAMIdentityCenterARN

  QBusinessWebExperienceServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
               - application.qbusiness.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
              - 'sts:SetContext'
            Condition:
              StringEquals: 
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike: 
                "aws:SourceArn": !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref QBusinessWebExperienceServiceManagedPolicy

  QBusinessWebExperienceServiceManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:      
      Description: Q Web Experience Managed Policy
      Path: /service-role/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "QBusinessConversationPermission"
            Effect: Allow
            Action: 
            - "s3:GetObject"
            - "qbusiness:Chat"
            - "qbusiness:ChatSync"
            - "qbusiness:ListMessages"
            - "qbusiness:ListConversations"
            - "qbusiness:DeleteConversation"
            - "qbusiness:PutFeedback"
            - "qbusiness:GetWebExperience"
            - "qbusiness:GetApplication"
            - "qbusiness:ListPlugins"
            - "qbusiness:GetChatControlsConfiguration"
            Resource: !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
          - Sid: "QBusinessKMSDecryptPermissions"
            Effect: Allow
            Action: "kms:Decrypt"
            Resource: !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/key_id"
            Condition:
              StringEquals:
                "kms:ViaService": !Sub "qbusiness:${AWS::Region}:amazonaws.com"
          - Sid: "QBusinessQAppsPermissions"
            Effect: Allow
            Action: 
            -  "qapps:CreateQApp"
            -  "qapps:PredictProblemStatementFromConversation"
            -  "qapps:PredictQAppFromProblemStatement"
            -  "qapps:CopyQApp"
            -  "qapps:GetQApp"
            -  "qapps:ListQApps"
            -  "qapps:UpdateQApp"
            -  "qapps:DeleteQApp"
            -  "qapps:AssociateQAppWithUser"
            -  "qapps:DisassociateQAppFromUser"
            -  "qapps:ImportDocumentToQApp"
            -  "qapps:ImportDocumentToQAppSession"
            -  "qapps:CreateLibraryItem"
            -  "qapps:GetLibraryItem"
            -  "qapps:UpdateLibraryItem"
            -  "qapps:CreateLibraryItemReview"
            -  "qapps:ListLibraryItems"
            -  "qapps:CreateSubscriptionToken"
            -  "qapps:StartQAppSession"
            -  "qapps:StopQAppSession"
            Resource: !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"

  QBusinessDataSourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
               - qbusiness.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
            Condition:
              StringEquals: 
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike: 
                "aws:SourceArn": !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref QBusinessDataSourceManagedPolicy

  QBusinessDataSourceManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:      
      Description: Q DataSource Managed Policy
      Path: /service-role/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowsAmazonQToGetObjectfromS3"
            Effect: Allow
            Action: "s3:GetObject"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3DataSourceBucket}/*"
            Condition:
              StringEquals:
                "aws:ResourceAccount": !Sub "${AWS::AccountId}"
          - Sid: "AllowsAmazonQToListS3Buckets"
            Effect: Allow
            Action: "s3:ListBucket"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3DataSourceBucket}"
            Condition:
              StringEquals:
                "aws:ResourceAccount": !Sub "${AWS::AccountId}"
          - Sid: "AllowsAmazonQToIngestDocuments"
            Effect: Allow
            Action: 
            - "qbusiness:BatchPutDocument"
            - "qbusiness:BatchDeleteDocument"
            Resource:
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}"
          - Sid: "AllowsAmazonQToCallMappingAPIs"
            Effect: Allow
            Action:
            - "qbusiness:PutGroup"
            - "qbusiness:CreateUser"
            - "qbusiness:DeleteGroup"
            - "qbusiness:UpdateUser"
            - "qbusiness:ListGroups"
            Resource:
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}"
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}/data-source/*"

  QBusinessIndex:
    Type: AWS::QBusiness::Index
    Properties:
      ApplicationId: !GetAtt  QBusinessApp.ApplicationId
      DisplayName: qci-insights-index
      DocumentAttributeConfigurations:
        # Health events
        - Name: 'startTime'
          Search: DISABLED
          Type: DATE
        - Name: 'lastUpdatedTime'
          Search: DISABLED
          Type: DATE
        - Name: 'endTime'
          Search: DISABLED
          Type: DATE
        # Support cases
        - Name: 'timeCreated'
          Search: DISABLED
          Type: DATE
        # Trusted Advisor fields
        - Name: 'timestamp'
          Search: DISABLED
          Type: DATE
        - Name: 'estimatedMonthlySavings'
          Search: DISABLED
          Type: NUMBER
        - Name: 'estimatedPercentMonthlySavings'
          Search: DISABLED
          Type: NUMBER

  QBusinessRetriver:
    Type: AWS::QBusiness::Retriever
    Properties:
     ApplicationId: !GetAtt  QBusinessApp.ApplicationId
     Configuration:
      NativeIndexConfiguration:
        IndexId: !GetAtt QBusinessIndex.IndexId
     DisplayName: qci-insights-index
     Type: NATIVE_INDEX

  QBusinessWebExperience:
    Type: AWS::QBusiness::WebExperience
    Properties:
     ApplicationId: !GetAtt  QBusinessApp.ApplicationId
     RoleArn: !GetAtt QBusinessWebExperienceServiceRole.Arn
     Title: Q Support Insights 

  QBusinessDataSource:
    Type: AWS::QBusiness::DataSource
    Properties:
     ApplicationId: !GetAtt QBusinessApp.ApplicationId
     Configuration:
        type: "S3"
        version: "1.0.0"
        syncMode: FULL_CRAWL
        additionalProperties:
          inclusionPrefixes:
            - ""
        connectionConfiguration:
          repositoryEndpointMetadata:
            BucketName: !Ref S3DataSourceBucket
        repositoryConfigurations:
          document:
            fieldMappings:
              - dataSourceFieldName: "s3_document_id"
                indexFieldName: "s3_document_id"
                indexFieldType: "STRING"
     DisplayName: qci-insights-datasource
     SyncSchedule: 'cron(0 0 * * ? *)'
     IndexId: !GetAtt QBusinessIndex.IndexId
     RoleArn: !GetAtt QBusinessDataSourceRole.Arn

Outputs:
  QBusinessApplicationId:
    Description: Q Application Id
    Value: !GetAtt QBusinessApp.ApplicationId
    Export:
      Name:  QBusinessApplicationId
  QBusinessIndexId:
    Description: Q Business Index Id
    Value: !GetAtt QBusinessIndex.IndexId
    Export:
      Name: QBusinessIndexId
  QBusinessDataSourceRoleArn:
    Description: Q Business Data Source Role Arn
    Value: !GetAtt QBusinessDataSourceRole.Arn
    Export:
      Name: QBusinessDataSourceRoleArn
  QBusinessDataSourceManagedPolicyArn:
    Description: Q Business Data Source Managed Policy Arn
    Value: !GetAtt QBusinessDataSourceManagedPolicy.PolicyArn
    Export:
      Name: QBusinessDataSourceManagedPolicyArn
  S3DataSourceBucketName:
    Description: S3 Bucket Name for the support data
    Value: !Ref S3DataSourceBucket
    Export:
      Name: S3DataSourceBucketName